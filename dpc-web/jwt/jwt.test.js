var KJUR = require('jsrsasign').KJUR;
window.KJUR = KJUR;
const generateJwtTest = require('./jwt');


test('generates an unsigned JWT and JWT with user input', () => {
  var env = 'prod-sbx';
  var clientToken = 'W3sidiI6MiwibCI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMiIsImkiOiIxZWIxZGM5OS0zYTlmLTQwNTYtYjA5OC03NGFkMzNlNDllY2MiLCJjIjpbeyJpNjQiOiJaSEJqWDIxaFkyRnliMjl1WDNabGNuTnBiMjRnUFNBeSJ9LHsiaTY0IjoiWlhod2FYSmxjeUE5SURJd01qRXRNRGd0TVRoVU1qTTZNVFE2TWpVdU5qQXpNemt3V2cifSx7Imk2NCI6ImIzSm5ZVzVwZW1GMGFXOXVYMmxrSUQwZ056RTNabVZtT1RjdFptTmlOQzAwTW1Sa0xXSTVPRGN0WlRZelpqSTJOVGsxWmpjMCJ9LHsibCI6ImxvY2FsIiwiaTY0IjoiQW0wa1dzOXRKRnJQLUR1bW1Pd0FSbjMxcDZRTERsNEl2RUcxQlRQakVUbjlCeTBnZnQ0QTJKcE9qOFVCZXRLSG93M0xnWkk5VDlnQVNaODV2bmRqSkZHVGxnVTZtVzd3T0pKTmxXck15ZlN1WGRrUnB1SXZVY1JtNWVlbzNmbDlYbkVUcUo1VFVMSWxsWWt5R3drSjlCbV9iT0JkOF94d0ZVVmxBNTMxUjBWYXpnMldRSjlqOXdQY2NOMlRBdHIxb2kyeG5McGk2RUZMSDZuNjZ3IiwidjY0IjoiMUkwTFlrZVRyU21yMHhHV3dSckM1TEZteU9GNThDUi1zbjcxUEQwMW5sWktCZjNZUXRSVnUxWUp6Q2ZQNFJlbGNlbVJRUU9ucUZOOC1zWmJCNEFKYm9ReGRycG5IalNWIn1dLCJzNjQiOiJveXdLVmZVMkt6YmtjbXlNSE9Cb1lvUWUwc1NhZEZYdzFNc1E2dHd1a0lrIn1d';
  var privateKey = `-----BEGIN RSA PRIVATE KEY-----
  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
  -----END RSA PRIVATE KEY-----`;
  var keyId = 'fd38276d-786a-49ec-9987-5e7b258e77cf';

  const result = generateJwtTest(env, clientToken, privateKey, keyId);

  var sPayload = JSON.parse(result.sPayload);
  var sJWT = result.sJWT;

  expect(sPayload.iss).toEqual(clientToken);
  expect(sPayload.sub).toEqual(clientToken);
  expect(sPayload.aud).toContain(env);
  expect(sJWT).not.toBe('');
});

test('', () => {

});