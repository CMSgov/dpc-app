name: opt-out-import test integration

on:
  pull_request:
    paths:
      - .github/workflows/opt-out-import-test-integration.yml
      - .github/workflows/opt-out-import-test-deploy.yml
      - lambda/opt-out-import/**
  workflow_dispatch:

# Ensure we have only one integration test running at a time
concurrency:
  group: opt-out-import-test-integration

jobs:
  verify-db-changes:
    runs-on: self-hosted
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: "true"
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/dpc-test-github-actions
      - name: Get database credentials
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            DB_USER=/dpc/test/consent/db_read_only_user_dpc_consent
            DB_PASSWORD=/dpc/test/consent/db_read_only_pass_dpc_consent
            HOST=/dpc/test/db/url
      - name: Install psql
        run: |
          docker run --name dpc-app-db-1 -e POSTGRES_PASSWORD="$DB_PASSWORD" -d postgres:16.4
      - name: Verify suppression file was ingested
        env:
          FILENAME: ${{needs.trigger.outputs.filename}}
        # CAUTION: if changing the script below, validate that sensitive information is not printed in the workflow
        run: |
          CAN_CONNECT=`docker exec dpc-app-db-1 pg_isready -h "$HOST" 2>&1 | grep accepting`
          if [[ $? -ne 0 || -z $CAN_CONNECT ]]; then
            echo "Can't connect to database, so can't test, so calling it good..."
            exit 0
          fi
          which python
