name: 'DPC - ECS Deploy'

on:
  push:
    paths:
      - .github/workflows/ecs-deploy.yml

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: self-hosted
    container:
      image: alpine:latest
      options: --user root
    steps:
      - name: Install git
        run: |
          apk update
          apk add git --no-cache
          apk add openssh --no-cache
      - name: Verify build parameters
        run: |
          echo 'TBD'
      - name: Verify image tags
        run: |
          echo 'TBD'
      - name: Check for maintenance mode
        run: |
          echo 'TBD'
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          repository: 'CMSgov/dpc-ops'
          ref: 'main'
          ssh-key: ${{ secrets.DPC_OPS_SSH_KEY }}
      - name: install terraform
        if: ${{ false }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.0.0"
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/dpc-dev-github-actions
      - name: Verify persistent plan
        if: ${{ false }}
        run: |
          cd terraform/dev/persistent
          terraform init
          terraform plan -out dpc-release-dev.tfplan -lock=false 2>&1
      - name: Apply persistent plan
        run: |
          echo 'TBD'
      - name: Verify main environment plan
        run: |
          echo 'TBD'
      - name: Apply main environment plan
        run: |
          echo 'TBD'
  wait-for-deployment:
    if: ${{ false }}
    name: Wait for deployment
    runs-on: self-hosted
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/dpc-dev-github-actions
      - name: Check API
        run: |
          ./scripts/check-deployment-status.sh dev api-1 api api frontend v9
  notify-new-relic:
    name: Notify New Relic
    runs-on: self-hosted
    if: ${{ false }}
    steps:
      - name: 'Notify New Relic'
        run: |
          echo 'TBD'
  notify-slack:
    name: Notify Slack
    runs-on: self-hosted
    if: ${{ false }}
    steps:
      - name: 'Notify Slack'
        run: |
          echo 'TBD'
