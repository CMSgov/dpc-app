name: Docker Build

on:
  push:
#    branches:
#      - main
#  pull_request:
  workflow_call:
    inputs:
      branch:
        description: "Branch name for build"
        required: true
        type: string

env:
  VAULT_PW: ${{ secrets.VAULT_PW }}
  REPORT_COVERAGE: true

jobs:
  docker_build:
    runs-on: self-hosted
    container:
      image: alpine:latest
    steps:
      - name: Set environment variables from AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/dpc-${{ inputs.env }}-github-actions
        with:
          params: |
            NEW_RELIC_API_KEY=/dpc/${{ inputs.env }}/newrelic/new_relic_user_key

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ./dpc-app
#          ref: ${{ github.event.pull_request.head.sha || github.event.inputs.branch }}
          ref: ${{ github.ref_name }}

      - name: "Set up JDK 11"
        uses: actions/setup-java@v1
        with:
          java-version: "11"

#      - name: "Set up Python 3.8.1"
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.8.1"

#      - name: Install system packages
#        run: |
#          apk update
#          apk add make --no-cache
#          apk add aws-cli --no-cache
#          apk add docker --no-cache
#          apk add docker-compose --no-cache

      - name: Build app
        run: docker --version && docker compose -f ./docker-compose.base.yml build base
#        run: cat Makefile | grep ci-app -B 2 -A 3 && make ci-app

      - name: Build portal # this is run in parallel with the app build on jenkins, might break out to separate job
        run: make ci-portals-v1

      - name: Save artifacts
        run: "echo 'Saving artifacts'"

      - name: ECR Login
        run: "log into ECR here and then push up images"
        # use ECR to save the artifacts
