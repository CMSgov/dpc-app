name: "Generate and Load Golden Macaroon"

on:
  workflow_dispatch:
    inputs:
      env:
        description: AWS environment to deploy to
        required: true
        type: 'string'
        default: 'dev'
  workflow_call:
    inputs:
      env:
        description: AWS environment to generate the macaroon to
        required: true
        type: 'string'
        default: 'dev'

concurrency:
  group: ${{ github.workflow }}-${{ inputs.env }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  macaroon:
    name: "Get and load Golden Macaroon"
    runs-on: self-hosted
    steps:
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/delegatedadmin/developer/dpc-${{ inputs.env }}-github-actions
      - name: Get and load Golden Macaroon
        run: |
          ALB_URL=$(aws elbv2 describe-load-balancers --names dpc-${{ inputs.env }}-frontend-internal | jq -r '.LoadBalancers[0].DNSName')
          token=$(curl -X POST ${ALB_URL}:9900/tasks/generate-token)
          aws ssm put-parameter --name '/dpc/${{ inputs.env }}/web/golden_macaroon' --type 'SecureString' --value "${token}" --key-id 'alias/dpc-${{ inputs.env }}-master-key' --overwrite
          
