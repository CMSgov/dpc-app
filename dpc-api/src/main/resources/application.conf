dpc.api {
    include "server.conf"
    include "queue.conf"

    jobTimeoutInSeconds = ${?JOB_TIMEOUT_IN_SECONDS}
    jobTimeoutInSeconds = 30

    publicURL = "http://localhost:3002" # The root URL at which the application is accessible, if necssary, include the port, do not include the application version

    authdb {
        driverClass = org.postgresql.Driver
        url = "jdbc:postgresql://localhost:5432/dpc_auth"
        user = postgres
        user = ${?AUTH_DB_USER}
        password = dpc-safe
        password = ${?AUTH_DB_PASS}
        initialSize = 5
        minSize = 5
        maxSize = 10
    }

  lookBackExemptOrgs = ["0ab352f1-2bf1-44c4-aa7a-3004a1ffef12","69c0d4d4-9c07-4fa8-9053-e10fb1608b48","c7f5247b-4c41-478c-84eb-a6e801bdb145"]
  lookbackExemptOrgs = ${?LOOK_BACK_EXEMPT_ORGS}

  server {
    enableThreadNameFilter = false
    requestLog.appenders = [{
      type = console
      timeZone = UTC
      layout {
        type = access-json
        timestampFormat = "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
      }
      filterFactories = [{
        type: token-filter-factory
      }]
    }]
  }

  bbclient {
    registerHealthCheck = ${?BB_REGISTER_HEALTH_CHECK}
    keyStore {
      type = "JKS"
      defaultPassword = "changeit"
      defaultPassword = ${?BB_KEYSTORE_PASS}
      location = "../bbcerts/bb.keystore"
      location = ${?BB_KEYSTORE_LOCATION}
    }

    timeouts {
      connectionTimeout: 5000 // ms
      socketTimeout: 5000 // ms
      requestTimeout: 5000 // ms
    }
    serverBaseUrl = ${?BFD_URL}
    count = 100 // Max number of resource that a request to BB will return before using another request
    bfdHashPepper = ${BFD_HASH_PEPPER}
    bfdHashIter = ${BFD_HASH_ITER}
  }

    attributionURL = "http://localhost:3500/v1/"
    exportPath = "/tmp"

    httpClient {
        timeout: 5s
        connectionRequestTimeout: 5s
    }

    fhir {
        validation {
            enabled = true
            schemaValidation = false
            schematronValidation = false
        }
    }

    tokens {
        versionPolicy {
            minimumVersion = 1
            currentVersion = 2
        }

        expirationPolicy {
            expirationOffset = 1
            expirationUnit = "YEARS"
        }
    }

    keyPairLocation = "../src/main/resources/keypair/bakery_keypair.json"
    keyPairLocation = ${?BAKERY_KEYPAIR_LOCATION}

    logging.appenders = [{
        type = console
        layout {
            type = json-dpc
            timestampFormat = "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
        }
    }]

}