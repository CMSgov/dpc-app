version: '3'

volumes:
  coverage:
  export-volume:
    driver: local
    driver_opts:
      type: none
      device: /tmp
      o: bind

services:

  redis:
    image: redis:latest

  db:
    image: postgres
    command: postgres -c 'max_connections=250'
    environment:
      - POSTGRES_MULTIPLE_DATABASES=dpc_attribution,dpc_queue,dpc_auth,dpc_consent,dpc-website_development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dpc-safe
    ports:
      - "15432:5432"
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d



  attribution:
    image: ${ECR_HOST:-755619740999.dkr.ecr.us-east-1.amazonaws.com/dpc-attribution}:latest
    depends_on:
      - db
    environment:
      - ENV=local
      - JACOCO=${REPORT_COVERAGE}
    ports:
      - "3500:8080"
      - "9902:9900"
    volumes:
      - ./jacocoReport/dpc-attribution:/jacoco-report

  api:
    image: ${ECR_HOST:-755619740999.dkr.ecr.us-east-1.amazonaws.com/dpc-api}:latest
    ports:
      - "3002:3002"
      - "9903:9900"
    env_file:
      - ./ops/config/decrypted/local.env
    environment:
      - attributionURL=http://attribution:8080/v1/
      - ENV=local
      - JACOCO=${REPORT_COVERAGE}
      - exportPath=/app/data
      - JVM_FLAGS=-Ddpc.api.authenticationDisabled=${AUTH_DISABLED:-false}
    depends_on:
      - attribution
    volumes:
      - export-volume:/app/data
      - ./jacocoReport/dpc-api:/jacoco-report

  consent:
    image: ${ECR_HOST:-755619740999.dkr.ecr.us-east-1.amazonaws.com/dpc-consent}:latest
    depends_on:
      - db
    environment:
      - ENV=local
      - JACOCO=${REPORT_COVERAGE}
    ports:
      - "3600:3600"
      - "9004:9900"
    volumes:
      - ./jacocoReport/dpc-consent:/jacoco-report

  start_api_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - attribution
      - aggregation
    command: attribution:8080 aggregation:9900

  start_api:
    image: dadarek/wait-for-dependencies
    depends_on:
      - api
    command: api:3002

  start_consent:
    image: dadarek/wait-for-dependencies
    depends_on:
      - consent
    command: consent:3600

  aggregation:
    image: ${ECR_HOST:-755619740999.dkr.ecr.us-east-1.amazonaws.com/dpc-aggregation}:latest
    ports:
      - "9901:9900"
    env_file:
      - ./ops/config/decrypted/local.env
    environment:
      - ENV=local
      - USE_BFD_MOCK=${USE_BFD_MOCK:-true}
      - JACOCO=${REPORT_COVERAGE}
    depends_on:
      - db
      - consent
    volumes:
      - export-volume:/app/data
      - ./jacocoReport/dpc-aggregation:/jacoco-report

  dpc_web:
    build:
      context: .
      dockerfile: dpc-web/Dockerfile
    image: dpc-web:latest
    volumes:
      - "./coverage:/dpc-web/coverage"
      - ./tmp/letter_opener/web:/dpc-web/tmp/letter_opener

    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=postgresql://db/dpc-website_development
      - TEST_DATABASE_URL=postgresql://db/dpc-website_test
      - DB_USER=postgres
      - DB_PASS=dpc-safe
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
    ports:
      - "3900:3500"
    depends_on:
      - db
      - redis

  web_sidekiq:
    volumes:
      - ./tmp/letter_opener/web:/dpc-web/tmp/letter_opener
    build:
      context: .
      dockerfile: dpc-web/Dockerfile
    command: sidekiq
    image: dpc-web-sidekiq:latest
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=postgresql://db/dpc-website_development
      - DB_USER=postgres
      - DB_PASS=dpc-safe
    depends_on:
      - redis
      - db

  dpc_admin:
    build:
      context: .
      dockerfile: dpc-admin/Dockerfile
    image: dpc-admin:latest
    volumes:
      - "./coverage:/dpc-admin/coverage"
      - ./tmp/letter_opener/admin:/dpc-admin/tmp/letter_opener

    environment:
      - GOLDEN_MACAROON=${GOLDEN_MACAROON}
      - API_METADATA_URL=http://api:3002/v1
      - REDIS_URL=redis://redis
      - DATABASE_URL=postgresql://db/dpc-website_development
      - TEST_DATABASE_URL=postgresql://db/dpc-website_test
      - DB_USER=postgres
      - DB_PASS=dpc-safe
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis

  admin_sidekiq:
    volumes:
      - ./tmp/letter_opener/admin:/dpc-admin/tmp/letter_opener
    build:
      context: .
      dockerfile: dpc-admin/Dockerfile
    command: sidekiq
    image: dpc-admin-sidekiq:latest
    environment:
      - SIDEKIQ_ALIVE_PORT=4242
      - REDIS_URL=redis://redis
      - DATABASE_URL=postgresql://db/dpc-website_development
      - DB_USER=postgres
      - DB_PASS=dpc-safe
    depends_on:
      - redis
      - db

  # Starts up each service in the background
  start_core_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
    command: db:5432

  start_web:
    image: dadarek/wait-for-dependencies
    depends_on:
      - dpc_web
    command: dpc_web:3500

  start_admin:
    image: dadarek/wait-for-dependencies
    depends_on:
      - dpc_admin
    command: dpc_admin:3000

  start_admin_sidekiq:
    image: dadarek/wait-for-dependencies
    depends_on:
      - admin_sidekiq
    command: admin_sidekiq:7433

  start_web_sidekiq:
    image: dadarek/wait-for-dependencies
    depends_on:
      - web_sidekiq
    command: web_sidekiq:7433